apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "com.etiennelawlor.hackernews"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "0.1"
        // Enabling multidex support.
        multiDexEnabled true
//        multiDexKeepProguard file('multidex-keep.txt')
        vectorDrawables.useSupportLibrary = true
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion 19
        }
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree('proguard').asList().toArray()
        }
        debug {
            minifyEnabled false
            debuggable true
        }
    }
    lintOptions {
        checkReleaseBuilds true
        abortOnError false
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

ext {
    supportLibVersion = '25.0.1'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:design:${supportLibVersion}"

    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.6.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.6.0'

    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:3.1.0'

    compile 'com.netflix.rxjava:rxjava-android:0.20.7'

    compile 'com.github.lawloretienne:trestle:0.0.6'

    debugCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    compile 'com.android.support:multidex:1.0.1' //
}

// Extract signing info into a properties file
def props = new Properties()
props.load(new FileInputStream(project.file("signing.properties")))

android.signingConfigs.release.storeFile project.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword